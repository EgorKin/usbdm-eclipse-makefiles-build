<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<!DOCTYPE root SYSTEM "../package.dtd">

<root version="1.0">
   <!-- Cortex-M3 FreeRTOS RTOS -->
   <projectActionList id="Cortex-M3-FreeRTOS" >
      <applyWhen>
         <and>
            <deviceFamilyIs>CortexM3</deviceFamilyIs>
            <variableRef idRef="linkerRamSize"   condition="greaterThan" value="2048" />
            <variableRef idRef="linkerFlashSize" condition="greaterThan" value="4096" />
            <variableRef idRef="outputType"      condition="matches"     value=".*ProjectType\.exe$" />
         </and>
      </applyWhen>
      <variable id="projectOptionValue.FreeRTOS" 
         name="FreeRTOS" 
         description="Adds FreeRTOS framework for Cortex M3" 
         checkGroup="group-additional-options" />
      
      <projectActionList id="FreeRTOS-noCpp-noBlinky">
         <applyWhen>
            <and>
               <variableRef      idRef="projectOptionValue.FreeRTOS"         defaultValue="false" />
               <not><variableRef idRef="projectOptionValue.CPP-abstraction"  defaultValue="false" /></not>
               <not><variableRef idRef="projectOptionValue.FRDM-Blinky"      defaultValue="false" /></not>
            </and>
         </applyWhen>
         <!-- Default RTOS C main -->
         <projectActionList>
            <applyWhen>
               <not><variableRef idRef="hasCCNature" condition="isTrue" /></not>
            </applyWhen>
            <copy source="Sources/main.cpp" target="Sources/main.c" overwrite="true" />
         </projectActionList>
         <!-- Default RTOS CPP main -->
         <projectActionList>
            <applyWhen>
               <variableRef idRef="hasCCNature" condition="isTrue" />
            </applyWhen>
            <copy source="Sources/main.cpp" target="Sources/main.cpp" overwrite="true" />
         </projectActionList>
      </projectActionList>
      
      <projectActionList id="FreeRTOS-noCpp-blinky">
         <applyWhen>
            <and>
               <variableRef      idRef="projectOptionValue.FreeRTOS" />
               <not><variableRef idRef="projectOptionValue.CPP-abstraction"  defaultValue="false" /></not>
               <variableRef      idRef="projectOptionValue.FRDM-Blinky"      defaultValue="false" />
            </and>
         </applyWhen>
         <!-- Blinky RTOS C main -->
         <projectActionList>
            <applyWhen>
               <not><variableRef idRef="hasCCNature" condition="isTrue" /></not>
            </applyWhen>
            <copy source="Sources/main.cpp" target="Sources/main.c" overwrite="true" />
         </projectActionList>
         <!-- Blinky RTOS CPP main -->
         <projectActionList>
            <applyWhen>
               <variableRef idRef="hasCCNature" condition="isTrue" />
            </applyWhen>
            <copy source="Sources/main.cpp" target="Sources/main.cpp" overwrite="true" />
         </projectActionList>
      </projectActionList>

      <projectActionList id="FreeRTOS-base">
         <applyWhen>
            <variableRef idRef="projectOptionValue.FreeRTOS" />
         </applyWhen>
         <constant id="FreeRTOS.stack.size"   value="100" />

         <copy source="Sources/FreeRTOSConfig.cfg"   target="Sources/FreeRTOSConfig.cfg" />
	 
         <copy source="Startup_Code/FreeRtosStubs.c" target="Startup_Code/FreeRtosStubs.c" overwrite="true"  derived="true" />
         <copy source="${usbdm_application_path}\Stationery\Packages\FreeRTOS\FreeRTOS_Reference_Manual_V10.0.0.pdf" target="FreeRTOS.pdf" type="link" sourcePathType="absolute"/>

         <createFolder target="FreeRTOS" />
         <copy source="FreeRTOS/FreeRTOSConfig.h"                               target="FreeRTOS/FreeRTOSConfig.h"  derived="true" />
         <copy source="../FreeRTOS/license.txt"                                 target="FreeRTOS/license.txt"  derived="true" />
         <copy source="../FreeRTOS/Source"                                      target="FreeRTOS/Source"  derived="true" />
         <copy source="../FreeRTOS/Source/Portable/GCC/ARM_CM3/port.c"          target="FreeRTOS/Source/port.c"  derived="true" />
         <copy source="../FreeRTOS/Source/Portable/GCC/ARM_CM3/portmacro.h"     target="FreeRTOS/Source/portmacro.h"  derived="true" />
         <excludeSourceFolder target="FreeRTOS/Source/Portable" />
         <projectOption id="net.sourceforge.usbdm.gnu.c.compiler.option.include.paths">
            <value>&quot;${ProjDirPath}/FreeRTOS/Source/Include&quot;</value>
            <value>&quot;${ProjDirPath}/FreeRTOS/Source&quot;</value>
            <value>&quot;${ProjDirPath}/FreeRTOS&quot;</value>
         </projectOption>
         <projectOption id="net.sourceforge.usbdm.gnu.cpp.compiler.option.include.paths">
            <value>&quot;${ProjDirPath}/FreeRTOS/Source/Include&quot;</value>
            <value>&quot;${ProjDirPath}/FreeRTOS/Source&quot;</value>
            <value>&quot;${ProjDirPath}/FreeRTOS&quot;</value>
         </projectOption>
         <projectOption id="net.sourceforge.usbdm.gnu.c.compiler.option.preprocessor.def.symbols">
            <value>__CORTEX_M3</value>
            <value>__FREERTOS</value>
         </projectOption>
         <projectOption id="net.sourceforge.usbdm.gnu.cpp.compiler.option.preprocessor.def.symbols">
            <value>__CORTEX_M3</value>
            <value>__FREERTOS</value>
         </projectOption>
      </projectActionList>
      
      <!-- CPP-abstraction RTOS files -->
      <projectActionList id="FreeRTOS-Cpp-abstraction">
         <applyWhen>
            <and>
               <variableRef idRef="projectOptionValue.FreeRTOS" />
               <variableRef idRef="projectOptionValue.CPP-abstraction"  defaultValue="false" />
            </and>
         </applyWhen>
         <copy source="FreeRTOS/FreeRTOS_CPP.h" target="FreeRTOS/FreeRTOS_CPP.h"   overwrite="true"  derived="true" />
         <copy source="FreeRTOS/Lock.h"         target="FreeRTOS/Lock.h"           overwrite="true"  derived="true" />
         <copy source="FreeRTOS/Lock.cpp"       target="FreeRTOS/Lock.cpp"         overwrite="true"  derived="true" />
         <copy source="FreeRTOS/MutexCPP.h"     target="FreeRTOS/MutexCPP.h"       overwrite="true"  derived="true" />
         <copy source="FreeRTOS/QueueCPP.h"     target="FreeRTOS/QueueCPP.h"       overwrite="true"  derived="true" />
         <copy source="FreeRTOS/SemaphoreCPP.h" target="FreeRTOS/SemaphoreCPP.h"   overwrite="true"  derived="true" />
         <copy source="FreeRTOS/TaskCPP.h"      target="FreeRTOS/TaskCPP.h"        overwrite="true"  derived="true" />
         <copy source="FreeRTOS/TimerCPP.h"     target="FreeRTOS/TimerCPP.h"       overwrite="true"  derived="true" />
	 
         <deleteResource target="Sources/main.c" />
         <copy source="Sources/main-1.cpp"   target="Sources/main.cpp"          overwrite="true" />
         <copy source="Sources/main-2.cpp"   target="Sources/main-2.cpp"        overwrite="true" />
         <copy source="Sources/main-3.cpp"   target="Sources/main-3.cpp"        overwrite="true" />
         <excludeSourceFile target="Sources/main-2.cpp" />
         <excludeSourceFile target="Sources/main-3.cpp" />
      </projectActionList>
      
   </projectActionList>

</root>
