<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<!DOCTYPE root SYSTEM "../package.dtd">

<root version="1.0">
   <!-- Cortex-M3 FreeRTOS RTOS -->
   <projectActionList id="Cortex-M3-FreeRTOS" >
      <applyWhen>
         <and>
            <deviceFamilyIs>CortexM3</deviceFamilyIs>
            <variableRef idRef="linkerRamSize"   condition="greaterThan" value="2048" />
            <variableRef idRef="linkerFlashSize" condition="greaterThan" value="4096" />
            <variableRef idRef="outputType"      condition="matches"     value=".*ProjectType\.exe$" />
         </and>
      </applyWhen>
      <variable id="projectOptionValue.FreeRTOS" 
         name="FreeRTOS" 
         description="Adds FreeRTOS framework for Cortex M3" 
         checkGroup="group-additional-options" />
      
      <projectActionList id="FreeRTOS-noCpp-noBlinky">
         <applyWhen>
            <and>
               <variableRef      idRef="projectOptionValue.FreeRTOS"         defaultValue="false" />
               <not><variableRef idRef="projectOptionValue.CPP-abstraction"  defaultValue="false" /></not>
               <not><variableRef idRef="projectOptionValue.FRDM-Blinky"      defaultValue="false" /></not>
            </and>
         </applyWhen>
         <!-- Default RTX C main -->
         <projectActionList>
            <applyWhen>
               <not><variableRef idRef="hasCCNature" condition="isTrue" /></not>
            </applyWhen>
            <copy source="Sources/main-RTX.c" target="Sources/main.c" overwrite="true" />
         </projectActionList>
         <!-- Default RTX CPP main -->
         <projectActionList>
            <applyWhen>
               <variableRef idRef="hasCCNature" condition="isTrue" />
            </applyWhen>
            <copy source="Sources/main-RTX.cpp" target="Sources/main.cpp" overwrite="true" />
         </projectActionList>
      </projectActionList>
      
      <projectActionList id="FreeRTOS-noCpp-blinky">
         <applyWhen>
            <and>
               <variableRef      idRef="projectOptionValue.FreeRTOS" />
               <not><variableRef idRef="projectOptionValue.CPP-abstraction"  defaultValue="false" /></not>
               <variableRef      idRef="projectOptionValue.FRDM-Blinky"      defaultValue="false" />
            </and>
         </applyWhen>
         <!-- Blinky RTX C main -->
         <projectActionList>
            <applyWhen>
               <not><variableRef idRef="hasCCNature" condition="isTrue" /></not>
            </applyWhen>
            <copy source="Sources/main-RTX.c" target="Sources/main.c" overwrite="true" />
         </projectActionList>
         <!-- Blinky RTX CPP main -->
         <projectActionList>
            <applyWhen>
               <variableRef idRef="hasCCNature" condition="isTrue" />
            </applyWhen>
            <copy source="Sources/main-RTX.cpp" target="Sources/main.cpp" overwrite="true" />
         </projectActionList>
      </projectActionList>

      <!-- CPP-abstraction RTX files -->
      <projectActionList id="FreeRTOS-Cpp">
         <applyWhen>
            <and>
               <variableRef idRef="projectOptionValue.FreeRTOS" />
               <variableRef idRef="projectOptionValue.CPP-abstraction"  defaultValue="false" />
            </and>
         </applyWhen>
      </projectActionList>
      
      <projectActionList id="FreeRTOS-base">
         <applyWhen>
            <variableRef idRef="projectOptionValue.FreeRTOS" />
         </applyWhen>
         <constant id="FreeRTOS.stack.size"   value="100" />

         <copy source="Sources/FreeRTOSConfig.h"     target="Sources/FreeRTOSConfig.h" />
         <copy source="Sources/FreeRTOSConfig.cfg"   target="Sources/FreeRTOSConfig.cfg" />
	 
         <copy source="Startup_Code/FreeRtosStubs.c" target="Startup_Code/FreeRtosStubs.c" overwrite="true" />

         <createFolder target="FreeRTOS" />
         <copy source="../FreeRTOS/license.txt"                                  target="FreeRTOS/license.txt" />
         <copy source="../FreeRTOS/Source"                                       target="FreeRTOS/Source" />
         <copy source="../FreeRTOS/Source/Portable/GCC/ARM_CM3/port.c"         target="FreeRTOS/Source/port.c" />
         <copy source="../FreeRTOS/Source/Portable/GCC/ARM_CM3/portmacro.h"    target="FreeRTOS/Source/portmacro.h" />
         <excludeSourceFolder target="FreeRTOS/Source/Portable" />
         <projectOption id="net.sourceforge.usbdm.gnu.c.compiler.option.include.paths">
            <value>&quot;${ProjDirPath}/FreeRTOS/Source/Include&quot;</value>
            <value>&quot;${ProjDirPath}/FreeRTOS/Source&quot;</value>
         </projectOption>
         <projectOption id="net.sourceforge.usbdm.gnu.cpp.compiler.option.include.paths">
            <value>&quot;${ProjDirPath}/FreeRTOS/Source/Include&quot;</value>
            <value>&quot;${ProjDirPath}/FreeRTOS/Source&quot;</value>
         </projectOption>
         <projectOption id="net.sourceforge.usbdm.gnu.c.compiler.option.preprocessor.def.symbols">
            <value>__CORTEX_M3</value>
            <value>__FREERTOS</value>
         </projectOption>
         <projectOption id="net.sourceforge.usbdm.gnu.cpp.compiler.option.preprocessor.def.symbols">
            <value>__CORTEX_M3</value>
            <value>__FREERTOS</value>
         </projectOption>
      </projectActionList>
   </projectActionList>

</root>
