<!--
Devices using this peripheral: 
      S32K142
      S32K144
      S32K146
      S32K148
-->
      <peripheral>
         <?sourceFile "FTFC_S32K14x" ?>
         <?preferredAccessWidth "32" ?>
         <name>FTFC</name>
         <description>Flash Memory Interface</description>
         <groupName>FTFC</groupName>
         <headerStructName>FTFC</headerStructName>
         <baseAddress>0x40020000</baseAddress>
         <size>32</size>
         <access>read-write</access>
         <resetValue>0x0</resetValue>
         <resetMask>0xFFFFFFFF</resetMask>
         <addressBlock>
            <offset>0x0</offset>
            <size>0x14</size>
            <usage>registers</usage>
         </addressBlock>
         <addressBlock>
            <?width "8" ?>
            <offset>0x16</offset>
            <size>0x2</size>
            <usage>registers</usage>
         </addressBlock>
         <addressBlock>
            <?width "8" ?>
            <offset>0x2C</offset>
            <size>0x1</size>
            <usage>registers</usage>
         </addressBlock>
         <addressBlock>
            <?width "8" ?>
            <offset>0x2E</offset>
            <size>0x2</size>
            <usage>registers</usage>
         </addressBlock>
         <registers>
            <register>
               <name>FSTAT</name>
               <description>Flash Status Register</description>
               <addressOffset>0x0</addressOffset>
               <size>8</size>
               <resetValue>0x80</resetValue>
               <resetMask>0xFF</resetMask>
               <fields>
                  <field>
                     <name>MGSTAT0</name>
                     <description>Command Completion Status Flag \n
The MGSTAT0 status flag is set if an error is detected during execution of a flash command or during the flash reset sequence.\n
As a status flag, this bit cannot (and need not) be cleared by the user unlike the other error flags in this register</description>
                     <bitOffset>0</bitOffset>
                     <bitWidth>1</bitWidth>
                     <access>read-only</access>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>No error detected</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>Error detected</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>FPVIOL</name>
                     <description>Flash Protection Violation Flag \n
The FPVIOL error bit indicates an attempt was made to program or erase an address in a protected area of program flash or data flash memory during a command write sequence or a write was attempted to a protected area of the FlexRAM while enabled for EEPROM.  \n
While FPVIOL is set, the CCIF flag cannot be cleared to launch a command. The FPVIOL bit is cleared by writing a 1 to it. Writing a 0 to the FPVIOL bit has no effect</description>
                     <bitOffset>4</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>No violation</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>Violation detected</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>ACCERR</name>
                     <description>Flash Access Error Flag \n
The ACCERR error bit indicates an illegal access has occurred to a flash memory 
resource caused by a violation of the command write sequence or issuing an illegal flash command</description>
                     <bitOffset>5</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>No access error</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>Access error</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>RDCOLERR</name>
                     <description>FTF Read Collision Error Flag \n
Indicates that the MCU attempted a read from a flash memory resource that was being manipulated by a flash command</description>
                     <bitOffset>6</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>No collision error</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>Collision error</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>CCIF</name>
                     <description>Command Complete Interrupt Flag \n
Indicates that a flash command or EEPROM file system operation has completed</description>
                     <bitOffset>7</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>Command in progress</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>Command complete</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
               </fields>
            </register>
            <register>
               <name>FCNFG</name>
               <description>Flash Configuration Register</description>
               <addressOffset>0x1</addressOffset>
               <size>8</size>
               <resetValue>0x2</resetValue>
               <resetMask>0xFF</resetMask>
               <fields>
                  <field>
                     <name>EEERDY</name>
                     <description>EEERDY</description>
                     <bitOffset>0</bitOffset>
                     <bitWidth>1</bitWidth>
                     <access>read-only</access>
                  </field>
                  <field>
                     <name>RAMRDY</name>
                     <description>RAM Ready</description>
                     <bitOffset>1</bitOffset>
                     <bitWidth>1</bitWidth>
                     <access>read-only</access>
                  </field>
                  <field>
                     <name>ERSSUSP</name>
                     <description>Erase Suspend \n
The ERSSUSP bit allows the user to suspend (interrupt) the Erase Flash Sector command while it is executing</description>
                     <bitOffset>4</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>No suspend requested</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>Suspend requested</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>ERSAREQ</name>
                     <description>Erase All Request \n
Indicates a debugger issued a request to the memory controller to execute the Erase All Blocks command. This will: \n
\t- Erase All Blocks \n
\t- Verify the erased state \n
\t- Program the Flash Configuration Field to the unsecure state (FSEC[SEC]=10)</description>
                     <bitOffset>5</bitOffset>
                     <bitWidth>1</bitWidth>
                     <access>read-only</access>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>No active request\t- Writing 1 initiates a request</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>Active request</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>RDCOLLIE</name>
                     <description>Read Collision Error Interrupt Enable \n
The RDCOLLIE bit controls interrupt generation when a flash memory read collision error occurs</description>
                     <bitOffset>6</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>Interrupt disabled</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>Interrupt enabled\t- Interrupt request whenever an read collision error is detected</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>CCIE</name>
                     <description>Command Complete Interrupt Enable \n
The CCIE bit controls interrupt generation when a flash command completes</description>
                     <bitOffset>7</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>Interrupt disabled</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>Interrupt enabled\t- Interrupt request whenever the FSTAT[CCIF] flag is set</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
               </fields>
            </register>
            <register>
               <name>FSEC</name>
               <description>Flash Security Register</description>
               <addressOffset>0x2</addressOffset>
               <size>8</size>
               <access>read-only</access>
               <resetMask>0xFF</resetMask>
               <fields>
                  <field>
                     <name>SEC</name>
                     <description>Flash Security\nMCU security status</description>
                     <bitOffset>0</bitOffset>
                     <bitWidth>2</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b00</name>
                           <description>Secure</description>
                           <value>0b00</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b01</name>
                           <description>Secure</description>
                           <value>0b01</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b10</name>
                           <description>Unsecure</description>
                           <value>0b10</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b11</name>
                           <description>Secure</description>
                           <value>0b11</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>FSLACC</name>
                     <description>Freescale Failure Analysis Access Code</description>
                     <bitOffset>2</bitOffset>
                     <bitWidth>2</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b00</name>
                           <description>Access granted</description>
                           <value>0b00</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b01</name>
                           <description>Access denied</description>
                           <value>0b01</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b10</name>
                           <description>Access denied</description>
                           <value>0b10</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b11</name>
                           <description>Access granted</description>
                           <value>0b11</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>MEEN</name>
                     <description>Mass Erase Enable Bits</description>
                     <bitOffset>4</bitOffset>
                     <bitWidth>2</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b00</name>
                           <description>Mass erase enabled</description>
                           <value>0b00</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b01</name>
                           <description>Mass erase enabled</description>
                           <value>0b01</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b10</name>
                           <description>Mass erase disabled</description>
                           <value>0b10</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b11</name>
                           <description>Mass erase enabled</description>
                           <value>0b11</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>KEYEN</name>
                     <description>Backdoor Key Security Enable\n
Backdoor key access allows the device to be unsecured by a special code</description>
                     <bitOffset>6</bitOffset>
                     <bitWidth>2</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b00</name>
                           <description>Backdoor disabled</description>
                           <value>0b00</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b01</name>
                           <description>Backdoor disabled</description>
                           <value>0b01</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b10</name>
                           <description>Backdoor enabled</description>
                           <value>0b10</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b11</name>
                           <description>Backdoor disabled</description>
                           <value>0b11</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
               </fields>
            </register>
            <register>
               <name>FOPT</name>
               <description>Flash Option Register \n
Usage is device dependent. \n
Refer to the device&apos;s Chip Configuration details for the definition and use of these bits</description>
               <addressOffset>0x3</addressOffset>
               <size>8</size>
               <access>read-only</access>
               <resetMask>0xFF</resetMask>
               <fields>
                  <field>
                     <name>OPT</name>
                     <description>Nonvolatile Option \n
These bits are loaded from flash to this register at reset</description>
                     <bitOffset>0</bitOffset>
                  </field>
               </fields>
            </register>
            <register>
               <dim>12</dim>
               <dimIncrement>1</dimIncrement>
               <dimIndex>3:Flash address [7..0],2:Flash address [15..8],1:Flash address [23..16],0:FCMD (Flash command),7:Data Byte 3,6:Data Byte 2,5:Data Byte 1,4:Data Byte 0,B:Data Byte 7,A:Data Byte 6,9:Data Byte 5,8:Data Byte 4</dimIndex>
               <name>FCCOB%s</name>
               <description>FCCOB %s - Usually %m \n
The Flash Common Command Object registers provides a command code and relevant parameters to the memory controller.\n
Some commands return information to the FCCOB registers when complete,
Usage varies with command</description>
               <addressOffset>0x4</addressOffset>
               <size>8</size>
               <resetMask>0xFF</resetMask>
               <fields>
                  <field>
                     <name>CCOB%s</name>
                     <description>%m</description>
                     <bitOffset>0</bitOffset>
                  </field>
               </fields>
            </register>
            <register>
               <dim>4</dim>
               <dimIncrement>1</dimIncrement>
               <dimIndex>3:PROT[7..0],2:PROT[15..8],1:PROT[23..16],0:PROT[31..24]</dimIndex>
               <name>FPROT%s</name>
               <description>Program Flash Protection \n
Each PROT bit protects 1/32 of the total program flash from program and erase operations</description>
               <addressOffset>0x10</addressOffset>
               <size>8</size>
               <resetMask>0xFF</resetMask>
               <fields>
                  <field>
                     <name>PROT</name>
                     <description>Program Flash Region Protect</description>
                     <bitOffset>0</bitOffset>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>Program flash region is protected</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>Program flash region is not protected</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
               </fields>
            </register>
            <register>
               <name>FEPROT</name>
               <description>EEPROM Protection Register</description>
               <addressOffset>0x16</addressOffset>
               <size>8</size>
               <resetMask>0x0</resetMask>
               <fields>
                  <field>
                     <name>EPROT</name>
                     <description>EEPROM Region Protect</description>
                     <bitOffset>0</bitOffset>
                  </field>
               </fields>
            </register>
            <register>
               <name>FDPROT</name>
               <description>Data Flash Protection Register</description>
               <addressOffset>0x17</addressOffset>
               <size>8</size>
               <resetMask>0x0</resetMask>
               <fields>
                  <field>
                     <name>DPROT</name>
                     <description>Data Flash Region Protect</description>
                     <bitOffset>0</bitOffset>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>00000000</name>
                           <description>Data Flash region is protected</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>00000001</name>
                           <description>Data Flash region is not protected</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
               </fields>
            </register>
            <register>
               <name>FCSESTAT</name>
               <description>Flash CSEc Status Register</description>
               <addressOffset>0x2C</addressOffset>
               <size>8</size>
               <access>read-only</access>
               <resetMask>0xFF</resetMask>
               <fields>
                  <field>
                     <name>BSY</name>
                     <description>Busy</description>
                     <bitOffset>0</bitOffset>
                     <bitWidth>1</bitWidth>
                  </field>
                  <field>
                     <name>SB</name>
                     <description>Secure Boot</description>
                     <bitOffset>1</bitOffset>
                     <bitWidth>1</bitWidth>
                  </field>
                  <field>
                     <name>BIN</name>
                     <description>Secure Boot Initialization</description>
                     <bitOffset>2</bitOffset>
                     <bitWidth>1</bitWidth>
                  </field>
                  <field>
                     <name>BFN</name>
                     <description>Secure Boot Finished</description>
                     <bitOffset>3</bitOffset>
                     <bitWidth>1</bitWidth>
                  </field>
                  <field>
                     <name>BOK</name>
                     <description>Secure Boot OK</description>
                     <bitOffset>4</bitOffset>
                     <bitWidth>1</bitWidth>
                  </field>
                  <field>
                     <name>RIN</name>
                     <description>Random Number Generator Initialized</description>
                     <bitOffset>5</bitOffset>
                     <bitWidth>1</bitWidth>
                  </field>
                  <field>
                     <name>EDB</name>
                     <description>External Debug</description>
                     <bitOffset>6</bitOffset>
                     <bitWidth>1</bitWidth>
                  </field>
                  <field>
                     <name>IDB</name>
                     <description>Internal Debug</description>
                     <bitOffset>7</bitOffset>
                     <bitWidth>1</bitWidth>
                  </field>
               </fields>
            </register>
            <register>
               <name>FERSTAT</name>
               <description>Flash Error Status Register</description>
               <addressOffset>0x2E</addressOffset>
               <size>8</size>
               <resetMask>0xFF</resetMask>
               <fields>
                  <field>
                     <name>DFDIF</name>
                     <description>Double Bit Fault Detect Interrupt Flag</description>
                     <bitOffset>1</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0</name>
                           <description>Double bit fault not detected during a valid flash read access from the platform flash controller</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>1</name>
                           <description>Double bit fault detected (or FERCNFG[FDFD] is set) during a valid flash read access from the platform flash controller</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
               </fields>
            </register>
            <register>
               <name>FERCNFG</name>
               <description>Flash Error Configuration Register</description>
               <addressOffset>0x2F</addressOffset>
               <size>8</size>
               <resetMask>0xFF</resetMask>
               <fields>
                  <field>
                     <name>DFDIE</name>
                     <description>Double Bit Fault Detect Interrupt Enable</description>
                     <bitOffset>1</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0</name>
                           <description>Double bit fault detect interrupt disabled</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>1</name>
                           <description>Double bit fault detect interrupt enabled. An interrupt request is generated whenever the FERSTAT[DFDIF] flag is set</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>FDFD</name>
                     <description>Force Double Bit Fault Detect</description>
                     <bitOffset>5</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0</name>
                           <description>FERSTAT[DFDIF] sets only if a double bit fault is detected during read access from the platform flash controller</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>1</name>
                           <description>FERSTAT[DFDIF] sets during any valid flash read access from the platform flash controller. An interrupt request is generated if the DFDIE bit is set</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
               </fields>
            </register>
         </registers>
      </peripheral>
